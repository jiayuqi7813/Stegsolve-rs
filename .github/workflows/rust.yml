name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
    - uses: actions/checkout@v4

    - name: Install system dependencies (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          libgtk-4-dev \
          libgdk-pixbuf-2.0-dev \
          libglib2.0-dev \
          libpng-dev \
          libjpeg-dev \
          libtiff-dev \
          pkg-config \
          build-essential

    - name: Install system dependencies (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        brew install pkg-config gtk4 gdk-pixbuf glib libpng jpeg libtiff

    - name: Install system dependencies (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        # 设置 MSVC 工具链
        rustup default stable-msvc

        # 安装 Chocolatey（如果尚未安装）
        Set-ExecutionPolicy Bypass -Scope Process -Force
        [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.SecurityProtocolType]::Tls12
        Invoke-Expression ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))

        # 安装 gvsbuild 依赖
        choco install -y python --version=3.9.0
        choco install -y git
        choco install -y pkgconfiglite

        # 安装 gvsbuild
        python -m pip install gvsbuild

        # 构建 GTK4
        gvsbuild build gtk4

        # 设置环境变量
        $gtkPath = "C:\gtk-build\gtk\x64\release"
        Add-Content -Path $env:GITHUB_ENV -Value "PKG_CONFIG_PATH=$gtkPath\lib\pkgconfig"
        Add-Content -Path $env:GITHUB_ENV -Value "PATH=$gtkPath\bin;$env:PATH"
        Add-Content -Path $env:GITHUB_ENV -Value "LIB=$gtkPath\lib;$env:LIB"

    - name: Build
      run: cargo build --verbose

    - name: Run tests
      run: cargo test --verbose